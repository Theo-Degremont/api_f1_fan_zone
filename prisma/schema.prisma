generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int         @id @default(autoincrement())
  username           String      @db.VarChar(50)
  email              String      @db.VarChar(255)
  password           String      @db.VarChar(255)
  favorite_team_id   Int?
  favorite_driver_id Int?
  created_at         DateTime    @default(now())
  modified_at        DateTime?
  game_scores        GameScore[]
}

model Driver {
  id              Int                 @id @default(autoincrement())
  name            String              @db.VarChar(255)
  nb_championship Int
  nb_pole         Int
  nb_race         Int
  nb_victory      Int
  number          Int                 @unique
  surname         String              @db.VarChar(255)
  current_team_id Int?
  image_url       String?             @db.VarChar(500)
  key             String              @unique @db.VarChar(255)
  nb_podiums      Int                 @default(0)
  current_team    Team?               @relation("CurrentTeamDrivers", fields: [current_team_id], references: [id])
  race_results    RaceResult[]
  classements     ClassementDriver[]
  team_history    DriverTeamHistory[]
}

model Team {
  id              Int                 @id @default(autoincrement())
  name            String              @db.VarChar(255)
  date_start      DateTime
  date_end        DateTime?
  nb_victory      Int
  color           String              @db.VarChar(7)
  nb_championship Int
  nb_race         Int
  key             String              @unique @db.VarChar(255)
  nb_podiums      Int                 @default(0)
  nb_pole         Int                 @default(0)
  current_drivers Driver[]            @relation("CurrentTeamDrivers")
  classements     ClassementTeam[]
  driver_history  DriverTeamHistory[]
}

model DriverTeamHistory {
  id           Int       @id @default(autoincrement())
  driver_id    Int
  team_id      Int
  date_start   DateTime
  date_end     DateTime?
  season_start Int
  season_end   Int?
  is_current   Boolean   @default(false)
  created_at   DateTime  @default(now())
  driver       Driver    @relation(fields: [driver_id], references: [id])
  team         Team      @relation(fields: [team_id], references: [id])

  @@unique([driver_id, team_id, season_start])
  @@map("driver_team_history")
}

model Race {
  id           Int          @id @default(autoincrement())
  race_name    String       @db.VarChar(100)
  track_name   String       @db.VarChar(100)
  country      String?      @db.VarChar(100)
  city         String       @db.VarChar(100)
  started_at   DateTime
  nb_laps      Int
  nb_curve     Int?
  duration     Int?
  image_url    String?      @db.VarChar(500)
  season       Int
  race_results RaceResult[]
}

model RaceResult {
  id          Int       @id @default(autoincrement())
  race_id     Int
  driver_id   Int
  position    Int
  points      Int
  fastest_lap DateTime?
  created_at  DateTime  @default(now())
  lap_time    Int?
  status      String    @default("FINISHED") @db.VarChar(50)
  total_time  Int?
  driver      Driver    @relation(fields: [driver_id], references: [id])
  race        Race      @relation(fields: [race_id], references: [id])

  @@unique([race_id, driver_id])
}

model GameScore {
  id         Int      @id @default(autoincrement())
  user_id    Int
  score_ms   Int
  created_at DateTime @default(now())
  user       User     @relation(fields: [user_id], references: [id])
}

model ClassementDriver {
  id        Int    @id @default(autoincrement())
  season    Int
  id_driver Int
  position  Int
  points    Int
  nb_wins   Int    @default(0)
  nb_points Int    @default(0)
  driver    Driver @relation(fields: [id_driver], references: [id])

  @@unique([season, id_driver])
  @@unique([season, position])
  @@map("classement_driver")
}

model ClassementTeam {
  id        Int  @id @default(autoincrement())
  season    Int
  id_team   Int
  position  Int
  points    Int
  nb_wins   Int  @default(0)
  nb_points Int  @default(0)
  team      Team @relation(fields: [id_team], references: [id])

  @@unique([season, id_team])
  @@unique([season, position])
  @@map("classement_team")
}
