generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int         @id @default(autoincrement())
  username           String      @db.VarChar(50)
  email              String      @db.VarChar(255)
  password           String      @db.VarChar(255)
  favorite_team_id   Int?
  favorite_driver_id Int?
  created_at         DateTime    @default(now())
  modified_at        DateTime?
  game_scores        GameScore[]
}

model Driver {
  id              Int          @id @default(autoincrement())
  name            String       @db.VarChar(255)
  nb_championship Int
  nb_pole         Int
  nb_race         Int
  nb_victory      Int
  number          Int
  surname         String       @db.VarChar(255)
  current_team_id Int?
  previous_teams  Int[]
  current_team    Team?        @relation("CurrentTeamDrivers", fields: [current_team_id], references: [id])
  race_results    RaceResult[]
}

model Team {
  id              Int       @id @default(autoincrement())
  name            String    @db.VarChar(255)
  date_start      DateTime
  date_end        DateTime?
  nb_victory      Int
  color           String    @db.VarChar(7)
  nb_championship Int
  nb_race         Int
  current_drivers Driver[]  @relation("CurrentTeamDrivers")
}

model Race {
  id           Int          @id @default(autoincrement())
  race_name    String       @db.VarChar(100)
  track_name   String       @db.VarChar(100)
  country      String?      @db.VarChar(100)
  city         String       @db.VarChar(100)
  started_at   DateTime
  nb_laps      Int
  nb_curve     Int?
  duration     Int?
  race_results RaceResult[]
}

model RaceResult {
  id           Int       @id @default(autoincrement())
  race_id      Int
  driver_id    Int
  position     Int       // 0 = hors course, 1 = 1er, 2 = 2ème, etc.
  points       Int
  fastest_lap  DateTime?
  lap_time     Int?      // Temps du tour le plus rapide en millisecondes
  total_time   Int?      // Temps total de course en millisecondes
  status       String    @default("FINISHED") @db.VarChar(50) // FINISHED, DNF, DSQ, DNS
  created_at   DateTime  @default(now())
  driver       Driver    @relation(fields: [driver_id], references: [id])
  race         Race      @relation(fields: [race_id], references: [id])
  
  @@unique([race_id, driver_id]) // Un pilote ne peut avoir qu'un seul résultat par course
}

model GameScore {
  id         Int      @id @default(autoincrement())
  user_id    Int
  score_ms   Int
  created_at DateTime @default(now())
  user       User     @relation(fields: [user_id], references: [id])
}
